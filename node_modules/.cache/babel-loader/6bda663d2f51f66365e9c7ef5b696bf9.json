{"ast":null,"code":"var _jsxFileName = \"/home/anish/Downloads/my-pagebuilder/src/table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = styled(\"div\")`\n  font-family: sans-serif;\n  background: #f0f0f0;\n  height: 100vh;\n`;\n_c = Main;\nconst DropDownContainer = styled(\"div\")`\n  width: 10.5em;\n  margin: 0 auto;\n`;\n_c2 = DropDownContainer;\nconst DropDownHeader = styled(\"div\")`\n  margin-bottom: 0.8em;\n  padding: 0.4em 2em 0.4em 1em;\n  box-shadow: 0 2px 3px rgba(0, 0, 0, 0.15);\n  font-weight: 500;\n  font-size: 1.3rem;\n  color: #3faffa;\n  background: #ffffff;\n`;\n_c3 = DropDownHeader;\nconst DropDownListContainer = styled(\"div\")``;\n_c4 = DropDownListContainer;\nconst DropDownList = styled(\"ul\")`\n  padding: 0;\n  margin: 0;\n  padding-left: 1em;\n  background: #ffffff;\n  border: 2px solid #e5e5e5;\n  box-sizing: border-box;\n  color: #3faffa;\n  font-size: 1.3rem;\n  font-weight: 500;\n  &:first-child {\n    padding-top: 0.8em;\n  }\n`;\n_c5 = DropDownList;\nconst ListItem = styled(\"li\")`\n  list-style: none;\n  margin-bottom: 0.8em;\n`;\n_c6 = ListItem;\nconst options = [\"Mangoes\", \"Apples\", \"Oranges\"];\nexport default function TableApp() {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  const toggling = () => setIsOpen(!isOpen);\n\n  const onOptionClicked = value => () => {\n    setSelectedOption(value);\n    setIsOpen(false);\n    console.log(selectedOption);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Main, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Custom Select/dropdown\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DropDownContainer, {\n      children: [/*#__PURE__*/_jsxDEV(DropDownHeader, {\n        onClick: toggling,\n        children: selectedOption || \"Mangoes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), isOpen && /*#__PURE__*/_jsxDEV(DropDownListContainer, {\n        children: /*#__PURE__*/_jsxDEV(DropDownList, {\n          children: options.map(option => /*#__PURE__*/_jsxDEV(ListItem, {\n            onClick: onOptionClicked(option),\n            children: option\n          }, Math.random(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 7\n  }, this);\n} // function TableApp() {\n//   // State with list of all checked item\n//   const [checked, setChecked] = useState([]);\n//   const checkList = [\"Apple\", \"Banana\", \"Tea\", \"Coffee\"];\n//   // Add/Remove checked item from list\n//   const handleCheck = (event) => {\n//     var updatedList = [...checked];\n//     if (event.target.checked) {\n//       updatedList = [...checked, event.target.value];\n//     } else {\n//       updatedList.splice(checked.indexOf(event.target.value), 1);\n//     }\n//     setChecked(updatedList);\n//   };\n//   // Generate string of checked items\n//   const checkedItems = checked.length\n//     ? checked.reduce((total, item) => {\n//         return total + \", \" + item;\n//       })\n//     : \"\";\n//   // Return classes based on whether item is checked\n//   var isChecked = (item) =>\n//     checked.includes(item) ? \"checked-item\" : \"not-checked-item\";\n//   return (\n//     <div className=\"app\">\n//       <div className=\"checkList\">\n//         <div className=\"title\">Your CheckList:</div>\n//         <div className=\"list-container\">\n//           {checkList.map((item, index) => (\n//             <div key={index}>\n//               <input value={item} type=\"checkbox\" onChange={handleCheck} />\n//               <span className={isChecked(item)}>{item}</span>\n//             </div>\n//           ))}\n//         </div>\n//       </div>\n//       <div>\n//         {`Items checked are: ${checkedItems}`}\n//       </div>\n//     </div>\n//   );\n// }\n// class TableApp extends Component {\n//     render() {\n//         var heading = ['Name', 'City', 'Course'];\n//         var body =\n//             [['Kapil', 'Jaipur', 'MCA'],\n//             ['Aakash', 'Hisar', 'Btech'],\n//             ['Mani', 'Ranchi', 'MSc'],\n//             ['Yash', 'Udaipur', 'Mtech']\n//             ];\n//         return (\n//             <div >\n//                 <Table heading={heading} body={body} />,\n//             </div>\n//         );\n//     }\n// }\n// class Table extends Component {\n//     render() {\n//         var heading = this.props.heading;\n//         var body = this.props.body;\n//         return (\n//             <table style={{ width: 500 }}>\n//                 <thead>\n//                     <tr>\n//                         {heading.map(head => <th>{head}</th>)}\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {body.map(row => <TableRow row={row} />)}\n//                 </tbody>\n//             </table>\n//         );\n//     }\n// }\n// class TableRow extends Component {\n//     render() {\n//         var row = this.props.row;\n//         return (\n//             <tr>\n//                 {row.map(val => <td>{val}</td>)}\n//             </tr>\n//         )\n//     }\n// }\n// const rootElement = document.getElementById(\"root\");\n// ReactDOM.render(<Table />, rootElement);\n// export default TableApp;\n\n_s(TableApp, \"BpVbkn/NswzhRYWTNyv0RP2ekPc=\");\n\n_c7 = TableApp;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Main\");\n$RefreshReg$(_c2, \"DropDownContainer\");\n$RefreshReg$(_c3, \"DropDownHeader\");\n$RefreshReg$(_c4, \"DropDownListContainer\");\n$RefreshReg$(_c5, \"DropDownList\");\n$RefreshReg$(_c6, \"ListItem\");\n$RefreshReg$(_c7, \"TableApp\");","map":{"version":3,"sources":["/home/anish/Downloads/my-pagebuilder/src/table.js"],"names":["React","useState","Component","ReactDOM","styled","Main","DropDownContainer","DropDownHeader","DropDownListContainer","DropDownList","ListItem","options","TableApp","isOpen","setIsOpen","selectedOption","setSelectedOption","toggling","onOptionClicked","value","console","log","map","option","Math","random"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAGA,MAAMC,IAAI,GAAGD,MAAM,CAAC,KAAD,CAAQ;AAC3B;AACA;AACA;AACA,CAJA;KAAMC,I;AAMN,MAAMC,iBAAiB,GAAGF,MAAM,CAAC,KAAD,CAAQ;AACxC;AACA;AACA,CAHA;MAAME,iB;AAKN,MAAMC,cAAc,GAAGH,MAAM,CAAC,KAAD,CAAQ;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAMG,c;AAUN,MAAMC,qBAAqB,GAAGJ,MAAM,CAAC,KAAD,CAAQ,EAA5C;MAAMI,qB;AAEN,MAAMC,YAAY,GAAGL,MAAM,CAAC,IAAD,CAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;MAAMK,Y;AAeN,MAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAD,CAAO;AAC9B;AACA;AACA,CAHA;MAAMM,Q;AAKN,MAAMC,OAAO,GAAG,CAAC,SAAD,EAAY,QAAZ,EAAsB,SAAtB,CAAhB;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAC/B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACc,cAAD,EAAiBC,iBAAjB,IAAsCf,QAAQ,CAAC,IAAD,CAApD;;AAEA,QAAMgB,QAAQ,GAAG,MAAMH,SAAS,CAAC,CAACD,MAAF,CAAhC;;AAEA,QAAMK,eAAe,GAAGC,KAAK,IAAI,MAAM;AACrCH,IAAAA,iBAAiB,CAACG,KAAD,CAAjB;AACAL,IAAAA,SAAS,CAAC,KAAD,CAAT;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYN,cAAZ;AACD,GAJD;;AAMA,sBACE,QAAC,IAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,iBAAD;AAAA,8BACE,QAAC,cAAD;AAAgB,QAAA,OAAO,EAAEE,QAAzB;AAAA,kBACGF,cAAc,IAAI;AADrB;AAAA;AAAA;AAAA;AAAA,cADF,EAIGF,MAAM,iBACL,QAAC,qBAAD;AAAA,+BACE,QAAC,YAAD;AAAA,oBACGF,OAAO,CAACW,GAAR,CAAYC,MAAM,iBACjB,QAAC,QAAD;AAAU,YAAA,OAAO,EAAEL,eAAe,CAACK,MAAD,CAAlC;AAAA,sBACGA;AADH,aAAiDC,IAAI,CAACC,MAAL,EAAjD;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,C,CAEH;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;GArIwBb,Q;;MAAAA,Q","sourcesContent":["import React, { useState, Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled from \"styled-components\";\n  \n\nconst Main = styled(\"div\")`\n  font-family: sans-serif;\n  background: #f0f0f0;\n  height: 100vh;\n`;\n\nconst DropDownContainer = styled(\"div\")`\n  width: 10.5em;\n  margin: 0 auto;\n`;\n\nconst DropDownHeader = styled(\"div\")`\n  margin-bottom: 0.8em;\n  padding: 0.4em 2em 0.4em 1em;\n  box-shadow: 0 2px 3px rgba(0, 0, 0, 0.15);\n  font-weight: 500;\n  font-size: 1.3rem;\n  color: #3faffa;\n  background: #ffffff;\n`;\n\nconst DropDownListContainer = styled(\"div\")``;\n\nconst DropDownList = styled(\"ul\")`\n  padding: 0;\n  margin: 0;\n  padding-left: 1em;\n  background: #ffffff;\n  border: 2px solid #e5e5e5;\n  box-sizing: border-box;\n  color: #3faffa;\n  font-size: 1.3rem;\n  font-weight: 500;\n  &:first-child {\n    padding-top: 0.8em;\n  }\n`;\n\nconst ListItem = styled(\"li\")`\n  list-style: none;\n  margin-bottom: 0.8em;\n`;\n\nconst options = [\"Mangoes\", \"Apples\", \"Oranges\"];\n\nexport default function TableApp() {\n    const [isOpen, setIsOpen] = useState(false);\n    const [selectedOption, setSelectedOption] = useState(null);\n  \n    const toggling = () => setIsOpen(!isOpen);\n  \n    const onOptionClicked = value => () => {\n      setSelectedOption(value);\n      setIsOpen(false);\n      console.log(selectedOption);\n    };\n  \n    return (\n      <Main>\n        <h1>Custom Select/dropdown</h1>\n        <DropDownContainer>\n          <DropDownHeader onClick={toggling}>\n            {selectedOption || \"Mangoes\"}\n          </DropDownHeader>\n          {isOpen && (\n            <DropDownListContainer>\n              <DropDownList>\n                {options.map(option => (\n                  <ListItem onClick={onOptionClicked(option)} key={Math.random()}>\n                    {option}\n                  </ListItem>\n                ))}\n              </DropDownList>\n            </DropDownListContainer>\n          )}\n        </DropDownContainer>\n      </Main>\n    );\n  }\n\n// function TableApp() {\n//   // State with list of all checked item\n//   const [checked, setChecked] = useState([]);\n//   const checkList = [\"Apple\", \"Banana\", \"Tea\", \"Coffee\"];\n\n//   // Add/Remove checked item from list\n//   const handleCheck = (event) => {\n//     var updatedList = [...checked];\n//     if (event.target.checked) {\n//       updatedList = [...checked, event.target.value];\n//     } else {\n//       updatedList.splice(checked.indexOf(event.target.value), 1);\n//     }\n//     setChecked(updatedList);\n//   };\n\n//   // Generate string of checked items\n//   const checkedItems = checked.length\n//     ? checked.reduce((total, item) => {\n//         return total + \", \" + item;\n//       })\n//     : \"\";\n\n//   // Return classes based on whether item is checked\n//   var isChecked = (item) =>\n//     checked.includes(item) ? \"checked-item\" : \"not-checked-item\";\n\n//   return (\n//     <div className=\"app\">\n//       <div className=\"checkList\">\n//         <div className=\"title\">Your CheckList:</div>\n//         <div className=\"list-container\">\n//           {checkList.map((item, index) => (\n//             <div key={index}>\n//               <input value={item} type=\"checkbox\" onChange={handleCheck} />\n//               <span className={isChecked(item)}>{item}</span>\n//             </div>\n//           ))}\n//         </div>\n//       </div>\n\n//       <div>\n//         {`Items checked are: ${checkedItems}`}\n//       </div>\n//     </div>\n//   );\n// }\n\n// class TableApp extends Component {\n//     render() {\n//         var heading = ['Name', 'City', 'Course'];\n//         var body =\n//             [['Kapil', 'Jaipur', 'MCA'],\n//             ['Aakash', 'Hisar', 'Btech'],\n//             ['Mani', 'Ranchi', 'MSc'],\n//             ['Yash', 'Udaipur', 'Mtech']\n//             ];\n//         return (\n//             <div >\n//                 <Table heading={heading} body={body} />,\n//             </div>\n//         );\n//     }\n// }\n  \n// class Table extends Component {\n//     render() {\n//         var heading = this.props.heading;\n//         var body = this.props.body;\n//         return (\n//             <table style={{ width: 500 }}>\n//                 <thead>\n//                     <tr>\n//                         {heading.map(head => <th>{head}</th>)}\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {body.map(row => <TableRow row={row} />)}\n//                 </tbody>\n//             </table>\n//         );\n//     }\n// }\n  \n// class TableRow extends Component {\n//     render() {\n//         var row = this.props.row;\n//         return (\n//             <tr>\n//                 {row.map(val => <td>{val}</td>)}\n//             </tr>\n//         )\n//     }\n// }\n\n// const rootElement = document.getElementById(\"root\");\n// ReactDOM.render(<Table />, rootElement);\n\n// export default TableApp;"]},"metadata":{},"sourceType":"module"}