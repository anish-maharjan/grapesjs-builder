{"ast":null,"code":"var _jsxFileName = \"/home/anish/Downloads/my-pagebuilder/src/table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Table() {\n  _s();\n\n  // State with list of all checked item\n  const [checked, setChecked] = useState([]);\n  const checkList = [\"Apple\", \"Banana\", \"Tea\", \"Coffee\"]; // Add/Remove checked item from list\n\n  const handleCheck = event => {\n    var updatedList = [...checked];\n\n    if (event.target.checked) {\n      updatedList = [...checked, event.target.value];\n    } else {\n      updatedList.splice(checked.indexOf(event.target.value), 1);\n    }\n\n    setChecked(updatedList);\n  }; // Generate string of checked items\n\n\n  const checkedItems = checked.length ? checked.reduce((total, item) => {\n    return total + \", \" + item;\n  }) : \"\"; // Return classes based on whether item is checked\n\n  var isChecked = item => checked.includes(item) ? \"checked-item\" : \"not-checked-item\";\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkList\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Your CheckList:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-container\",\n        children: checkList.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: item,\n            type: \"checkbox\",\n            onChange: handleCheck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: isChecked(item),\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: `Items checked are: ${checkedItems}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Table, \"wpcTo92rLAYHEZ4hrradcMGvahE=\");\n\n_c = Table;\n\nclass Tabledata extends Component {\n  render() {\n    var heading = [{\n      checkedItems\n    }];\n    var body = [['Kapil', 'Jaipur', 'MCA'], ['Aakash', 'Hisar', 'Btech'], ['Mani', 'Ranchi', 'MSc'], ['Yash', 'Udaipur', 'Mtech']];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        heading: heading,\n        body: body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), \",\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/_jsxDEV(Table, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 73,\n  columnNumber: 17\n}, this), rootElement);\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/home/anish/Downloads/my-pagebuilder/src/table.js"],"names":["React","useState","Component","ReactDOM","Table","checked","setChecked","checkList","handleCheck","event","updatedList","target","value","splice","indexOf","checkedItems","length","reduce","total","item","isChecked","includes","map","index","Tabledata","render","heading","body","rootElement","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState, Component } from \"react\";\nimport ReactDOM from \"react-dom\";\n\n  \n\n\nfunction Table() {\n  // State with list of all checked item\n  const [checked, setChecked] = useState([]);\n  const checkList = [\"Apple\", \"Banana\", \"Tea\", \"Coffee\"];\n\n  // Add/Remove checked item from list\n  const handleCheck = (event) => {\n    var updatedList = [...checked];\n    if (event.target.checked) {\n      updatedList = [...checked, event.target.value];\n    } else {\n      updatedList.splice(checked.indexOf(event.target.value), 1);\n    }\n    setChecked(updatedList);\n  };\n\n  // Generate string of checked items\n  const checkedItems = checked.length\n    ? checked.reduce((total, item) => {\n        return total + \", \" + item;\n      })\n    : \"\";\n\n  // Return classes based on whether item is checked\n  var isChecked = (item) =>\n    checked.includes(item) ? \"checked-item\" : \"not-checked-item\";\n\n  return (\n    <div className=\"app\">\n      <div className=\"checkList\">\n        <div className=\"title\">Your CheckList:</div>\n        <div className=\"list-container\">\n          {checkList.map((item, index) => (\n            <div key={index}>\n              <input value={item} type=\"checkbox\" onChange={handleCheck} />\n              <span className={isChecked(item)}>{item}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div>\n        {`Items checked are: ${checkedItems}`}\n      </div>\n    </div>\n  );\n}\n\nclass Tabledata extends Component {\n    render() {\n        var heading = [{checkedItems}];\n        var body =\n            [['Kapil', 'Jaipur', 'MCA'],\n            ['Aakash', 'Hisar', 'Btech'],\n            ['Mani', 'Ranchi', 'MSc'],\n            ['Yash', 'Udaipur', 'Mtech']\n            ];\n        return (\n            <div >\n                <Table heading={heading} body={body} />,\n            </div>\n        );\n    }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<Table />, rootElement);\n\nexport default Table;"]},"metadata":{},"sourceType":"module"}