{"ast":null,"code":"export default ((comps, _ref) => {\n  let {\n    modal,\n    ...config\n  } = _ref;\n  const type = \"table\";\n  const attrKey = config.attrTable;\n  const classKey = config.classTable;\n  const defaultComponent = comps.getType(\"table\");\n  const tableModel = defaultComponent.model;\n  const tableView = defaultComponent.view;\n  const tableProps = config.tableProps || {};\n  const components = [];\n\n  if (tableProps.header) {\n    components.push({\n      type: \"thead\",\n      row: 1,\n      columns: tableProps.columns\n    });\n  }\n\n  components.push({\n    type: \"tbody\",\n    ...tableProps\n  });\n\n  if (tableProps.footer) {\n    components.push({\n      type: \"tfoot\",\n      row: 1,\n      columns: tableProps.columns\n    });\n  }\n\n  comps.addType(type, {\n    model: tableModel.extend({\n      defaults: { ...tableModel.prototype.defaults,\n        components,\n        traits: [{\n          type: \"number\",\n          label: \"Number of Rows\",\n          name: \"rows\",\n          changeProp: 1\n        }, {\n          type: \"number\",\n          label: \"Number of Columns\",\n          name: \"columns\",\n          changeProp: 1\n        }, {\n          type: \"checkbox\",\n          label: \"Table Header\",\n          name: \"header\",\n          valueTrue: true,\n          valueFalse: false,\n          changeProp: 1\n        }, {\n          type: \"checkbox\",\n          label: \"Table Footer\",\n          name: \"footer\",\n          valueTrue: true,\n          valueFalse: false,\n          changeProp: 1\n        }],\n        ...tableProps\n      },\n\n      init() {\n        const attrs = this.getAttributes();\n        attrs[attrKey] = 1;\n        this.setAttributes(attrs);\n        classKey && this.addClass(classKey);\n        this.listenTo(this, \"change:rows\", this.changeDimensions);\n        this.listenTo(this, \"change:columns\", this.changeDimensions);\n        this.listenTo(this, \"change:header\", this.changeDimensions);\n        this.listenTo(this, \"change:footer\", this.changeDimensions);\n      },\n\n      changeDimensions() {\n        const addRows = this.get(\"rows\");\n        const addColumns = this.get(\"columns\");\n        const header = this.get(\"header\");\n        const footer = this.get(\"footer\");\n        const components = [];\n\n        if (header) {\n          components.push({\n            type: \"thead\",\n            rows: 1,\n            columns: addColumns\n          });\n        }\n\n        components.push({\n          type: \"tbody\",\n          rows: addRows,\n          columns: addColumns\n        });\n\n        if (footer) {\n          components.push({\n            type: \"tfoot\",\n            rows: 1,\n            columns: addColumns\n          });\n        }\n\n        this.components(components);\n      }\n\n    }, {\n      isComponent(el) {\n        if (el.hasAttribute && el.hasAttribute(attrKey)) {\n          return {\n            type\n          };\n        }\n      }\n\n    }),\n    view: tableView.extend({\n      init() {\n        this.listenTo(this.model, \"active\", this.openModal);\n      },\n\n      openModal() {\n        let setRows = tableProps.rows;\n        let setColumns = tableProps.columns;\n        const divContainer = document.createElement(\"div\");\n        const containerRows = document.createElement(\"div\");\n        containerRows.className = \"modal-table-row\";\n        const labelRows = document.createElement(\"label\");\n        labelRows.innerHTML = \"No. of Rows\";\n        containerRows.appendChild(labelRows);\n        const inputRows = document.createElement(\"input\");\n        inputRows.setAttribute(\"type\", \"number\");\n        inputRows.setAttribute(\"value\", setRows);\n\n        inputRows.onchange = () => {\n          setRows = inputRows.value;\n        };\n\n        containerRows.appendChild(inputRows);\n        divContainer.appendChild(containerRows);\n        const containerColumns = document.createElement(\"div\");\n        containerColumns.className = \"modal-table-column\";\n        const labelColumns = document.createElement(\"label\");\n        labelColumns.innerHTML = \"No. of Columns\";\n        containerColumns.appendChild(labelColumns);\n        const inputColumns = document.createElement(\"input\");\n        inputColumns.setAttribute(\"type\", \"number\");\n        inputColumns.setAttribute(\"value\", setColumns);\n\n        inputColumns.onchange = () => {\n          setColumns = inputColumns.value;\n        };\n\n        containerColumns.appendChild(inputColumns);\n        divContainer.appendChild(containerColumns);\n        const containerBtn = document.createElement(\"div\");\n        containerBtn.className = \"modal-create-btn\";\n        const btn = document.createElement(\"button\");\n        btn.setAttribute(\"type\", \"button\");\n        btn.innerHTML = \"Create Table\";\n\n        btn.onclick = () => {\n          this.model.set(\"rows\", setRows);\n          this.model.set(\"columns\", setColumns);\n          modal.close();\n        };\n\n        containerBtn.appendChild(btn);\n        divContainer.appendChild(containerBtn);\n        const style = document.createElement(\"style\");\n        style.innerHTML = `\n        .gjs-mdl-dialog {\n          width: 35%;\n        }\n        .modal-table-row, .modal-table-column {\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          margin-bottom: 15px;\n        }\n        .modal-table-row label, .modal-table-column label {\n          font-size: 14px;\n          flex: 1;\n        }\n        .modal-table-row input, .modal-table-column input {\n          flex: 1;\n          height: 35px;\n          border-radius: 10px;\n          border: 1px solid #f5f5f5;\n          padding: 2px 16px;\n          color: #333333;\n        }\n        .modal-table-row input, .modal-table-column input:focus {\n          outline: none\n        }\n        .modal-create-btn {\n          text-align: right;\n        }\n        .modal-create-btn button {\n          height: 35px;\n          border-radius: 10px;\n          border: none;\n          cursor: pointer;\n          padding: 0 10px;\n          color: #333333;\n        }\n        .modal-create-btn button:focus {\n          outline: none\n        }\n        `;\n        divContainer.appendChild(style);\n        modal.setTitle(\"Add a New Table\").setContent(divContainer).open();\n      }\n\n    })\n  });\n});","map":{"version":3,"sources":["/home/anish/Downloads/my-pagebuilder/node_modules/grapesjs-table/src/components/table.js"],"names":["comps","modal","config","type","attrKey","attrTable","classKey","classTable","defaultComponent","getType","tableModel","model","tableView","view","tableProps","components","header","push","row","columns","footer","addType","extend","defaults","prototype","traits","label","name","changeProp","valueTrue","valueFalse","init","attrs","getAttributes","setAttributes","addClass","listenTo","changeDimensions","addRows","get","addColumns","rows","isComponent","el","hasAttribute","openModal","setRows","setColumns","divContainer","document","createElement","containerRows","className","labelRows","innerHTML","appendChild","inputRows","setAttribute","onchange","value","containerColumns","labelColumns","inputColumns","containerBtn","btn","onclick","set","close","style","setTitle","setContent","open"],"mappings":"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","sourcesContent":["export default (comps, { modal, ...config }) => {\r\n  const type = \"table\";\r\n  const attrKey = config.attrTable;\r\n  const classKey = config.classTable;\r\n\r\n  const defaultComponent = comps.getType(\"table\");\r\n  const tableModel = defaultComponent.model;\r\n  const tableView = defaultComponent.view;\r\n  const tableProps = config.tableProps || {};\r\n\r\n  const components = [];\r\n\r\n  if (tableProps.header) {\r\n    components.push({ type: \"thead\", row: 1, columns: tableProps.columns });\r\n  }\r\n  components.push({ type: \"tbody\", ...tableProps });\r\n\r\n  if (tableProps.footer) {\r\n    components.push({ type: \"tfoot\", row: 1, columns: tableProps.columns });\r\n  }\r\n\r\n  comps.addType(type, {\r\n    model: tableModel.extend(\r\n      {\r\n        defaults: {\r\n          ...tableModel.prototype.defaults,\r\n          components,\r\n\r\n          traits: [\r\n            {\r\n              type: \"number\",\r\n              label: \"Number of Rows\",\r\n              name: \"rows\",\r\n              changeProp: 1,\r\n            },\r\n            {\r\n              type: \"number\",\r\n              label: \"Number of Columns\",\r\n              name: \"columns\",\r\n              changeProp: 1,\r\n            },\r\n            {\r\n              type: \"checkbox\",\r\n              label: \"Table Header\",\r\n              name: \"header\",\r\n              valueTrue: true,\r\n              valueFalse: false,\r\n              changeProp: 1,\r\n            },\r\n            {\r\n              type: \"checkbox\",\r\n              label: \"Table Footer\",\r\n              name: \"footer\",\r\n              valueTrue: true,\r\n              valueFalse: false,\r\n              changeProp: 1,\r\n            },\r\n          ],\r\n\r\n          ...tableProps,\r\n        },\r\n\r\n        init() {\r\n          const attrs = this.getAttributes();\r\n          attrs[attrKey] = 1;\r\n          this.setAttributes(attrs);\r\n          classKey && this.addClass(classKey);\r\n          this.listenTo(this, \"change:rows\", this.changeDimensions);\r\n          this.listenTo(this, \"change:columns\", this.changeDimensions);\r\n          this.listenTo(this, \"change:header\", this.changeDimensions);\r\n          this.listenTo(this, \"change:footer\", this.changeDimensions);\r\n        },\r\n\r\n        changeDimensions() {\r\n          const addRows = this.get(\"rows\");\r\n          const addColumns = this.get(\"columns\");\r\n          const header = this.get(\"header\");\r\n          const footer = this.get(\"footer\");\r\n\r\n          const components = [];\r\n\r\n          if (header) {\r\n            components.push({\r\n              type: \"thead\",\r\n              rows: 1,\r\n              columns: addColumns,\r\n            });\r\n          }\r\n          components.push({\r\n            type: \"tbody\",\r\n            rows: addRows,\r\n            columns: addColumns,\r\n          });\r\n\r\n          if (footer) {\r\n            components.push({\r\n              type: \"tfoot\",\r\n              rows: 1,\r\n              columns: addColumns,\r\n            });\r\n          }\r\n          this.components(components);\r\n        },\r\n      },\r\n      {\r\n        isComponent(el) {\r\n          if (el.hasAttribute && el.hasAttribute(attrKey)) {\r\n            return { type };\r\n          }\r\n        },\r\n      }\r\n    ),\r\n\r\n    view: tableView.extend({\r\n      init() {\r\n        this.listenTo(this.model, \"active\", this.openModal);\r\n      },\r\n\r\n      openModal() {\r\n        let setRows = tableProps.rows;\r\n      \r\n        let setColumns = tableProps.columns;\r\n        const divContainer = document.createElement(\"div\");\r\n\r\n        const containerRows = document.createElement(\"div\");\r\n        containerRows.className = \"modal-table-row\";\r\n        const labelRows = document.createElement(\"label\");\r\n        labelRows.innerHTML = \"No. of Rows\";\r\n        containerRows.appendChild(labelRows);\r\n\r\n        const inputRows = document.createElement(\"input\");\r\n        inputRows.setAttribute(\"type\", \"number\");\r\n        inputRows.setAttribute(\"value\", setRows);\r\n        inputRows.onchange = () => {\r\n          setRows = inputRows.value;\r\n        };\r\n        containerRows.appendChild(inputRows);\r\n        divContainer.appendChild(containerRows);\r\n\r\n        const containerColumns = document.createElement(\"div\");\r\n        containerColumns.className = \"modal-table-column\";\r\n        const labelColumns = document.createElement(\"label\");\r\n        labelColumns.innerHTML = \"No. of Columns\";\r\n        containerColumns.appendChild(labelColumns);\r\n\r\n        const inputColumns = document.createElement(\"input\");\r\n        inputColumns.setAttribute(\"type\", \"number\");\r\n        inputColumns.setAttribute(\"value\", setColumns);\r\n        inputColumns.onchange = () => {\r\n          setColumns = inputColumns.value;\r\n        };\r\n        containerColumns.appendChild(inputColumns);\r\n        divContainer.appendChild(containerColumns);\r\n\r\n        const containerBtn = document.createElement(\"div\");\r\n        containerBtn.className = \"modal-create-btn\";\r\n        const btn = document.createElement(\"button\");\r\n        btn.setAttribute(\"type\", \"button\");\r\n        btn.innerHTML = \"Create Table\";\r\n        btn.onclick = () => {\r\n          this.model.set(\"rows\", setRows);\r\n          this.model.set(\"columns\", setColumns);\r\n          modal.close();\r\n        };\r\n        containerBtn.appendChild(btn);\r\n\r\n        divContainer.appendChild(containerBtn);\r\n\r\n        const style = document.createElement(\"style\");\r\n        style.innerHTML = `\r\n        .gjs-mdl-dialog {\r\n          width: 35%;\r\n        }\r\n        .modal-table-row, .modal-table-column {\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: space-between;\r\n          margin-bottom: 15px;\r\n        }\r\n        .modal-table-row label, .modal-table-column label {\r\n          font-size: 14px;\r\n          flex: 1;\r\n        }\r\n        .modal-table-row input, .modal-table-column input {\r\n          flex: 1;\r\n          height: 35px;\r\n          border-radius: 10px;\r\n          border: 1px solid #f5f5f5;\r\n          padding: 2px 16px;\r\n          color: #333333;\r\n        }\r\n        .modal-table-row input, .modal-table-column input:focus {\r\n          outline: none\r\n        }\r\n        .modal-create-btn {\r\n          text-align: right;\r\n        }\r\n        .modal-create-btn button {\r\n          height: 35px;\r\n          border-radius: 10px;\r\n          border: none;\r\n          cursor: pointer;\r\n          padding: 0 10px;\r\n          color: #333333;\r\n        }\r\n        .modal-create-btn button:focus {\r\n          outline: none\r\n        }\r\n        `;\r\n        divContainer.appendChild(style);\r\n\r\n        modal.setTitle(\"Add a New Table\").setContent(divContainer).open();\r\n      },\r\n    }),\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}